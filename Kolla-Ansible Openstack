###################################################################### Install Kolla Ansible 2023.2 ##############################################################


#Update System, Install Python build and virtual environment dependencies on Deployer / Controller1
apt-get update -y
apt-get install python3-dev libffi-dev gcc libssl-dev python3-selinux python3-setuptools python3-venv -y

#Create a virtual environment and activate it
python3 -m venv 2023.1-venv
source 2023.1-venv/bin/activate

#Install ansible, kolla-ansible and its dependencies using pip
pip install -U pip 
pip install 'ansible-core>=2.14,<2.16'
ansible --version
pip install git+https://opendev.org/openstack/kolla-ansible@stable/2023.2

#Create ansible configuration
mkdir -p /etc/kolla
chown $USER:$USER /etc/kolla

#Copy fileglobals.yml and passwords.yml to /etc/kolla directory
cp -r 2023.1-venv/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
cp 2023.1-venv/share/kolla-ansible/ansible/inventory/* .

#Install Ansible Galaxy dependencies
kolla-ansible install-deps

#Create file ansible.cfg
mkdir /etc/ansible
tee /etc/ansible/ansible.cfg<<EOF
[defaults]
host_key_checking=False
pipelining=True
forks=100
EOF

#Modify inventory multinode configuration ( Backup Default Config )
cp multinode multinode.bak

#Edit file multinode, it will looks like below
nano multinode

#Edit and setup as your environment
----
[control]
controller01

[network]
controller01

[compute]
compute1
compute2
compute3

[monitoring]
controller01

[storage]
controller1

[deployment]
localhost       ansible_connection=local
...

#Test connection using ansible and ping module
ansible -i multinode all -m ping

#Generate Password for every openstack services and TLS Certificate
kolla-genpwd
kolla-ansible -i multinode certificates

#Create Directory for Kolla Ansible Configuration
mkdir /etc/kolla/config
mkdir /etc/kolla/config/nova
mkdir /etc/kolla/config/glance
mkdir -p /etc/kolla/config/cinder/cinder-volume
mkdir /etc/kolla/config/cinder/cinder-backup

#Make sure for editing ceph.conf
nano /etc/ceph/ceph.conf ( delete space )
# Should be like this 
[global]
fsid = 9dd70bd4-8c55-11ef-ae19-cbbb6d3e43ad
mon_host = [v2:172.21.4.10:3300/0,v1:172.21.4.10:6789/0]


#Copy file ceph.conf and ceph keyring to kolla config directory
cp /etc/ceph/ceph.conf /etc/kolla/config/cinder/
cp /etc/ceph/ceph.conf /etc/kolla/config/nova/
cp /etc/ceph/ceph.conf /etc/kolla/config/glance/
cp /etc/ceph/ceph.client.glance.keyring /etc/kolla/config/glance/
cp /etc/ceph/ceph.client.nova.keyring /etc/kolla/config/nova/
cp /etc/ceph/ceph.client.cinder.keyring /etc/kolla/config/nova/
cp /etc/ceph/ceph.client.cinder.keyring /etc/kolla/config/cinder/cinder-volume/
cp /etc/ceph/ceph.client.cinder.keyring /etc/kolla/config/cinder/cinder-backup/
cp /etc/ceph/ceph.client.cinder-backup.keyring /etc/kolla/config/cinder/cinder-backup/

#Create Main Configuration File for Kolla Ansible using globals.yml
#nano /etc/kolla/globals.yml
kolla_base_distro: "ubuntu"
kolla_install_type: "source"
openstack_release: "2023.2"
kolla_internal_vip_address: "172.21.2.100"
kolla_external_vip_address: "192.168.100.100"
kolla_external_fqdn: "smk1.sitedemo.my.id"
kolla_external_vip_interface: "enp0s3"
api_interface: "vlan2001"
tunnel_interface: "vlan2002"
neutron_external_interface: "enp0s9"
neutron_plugin_agent: "ovn"
kolla_enable_tls_internal: "yes"
kolla_enable_tls_external: "yes"
kolla_copy_ca_into_containers: "yes"
openstack_cacert: "/etc/ssl/certs/ca-certificates.crt"
kolla_enable_tls_backend: "yes"
enable_openstack_core: "yes"
enable_cinder: "yes"
enable_fluentd: "no"
enable_neutron_provider_networks: "yes"
ceph_glance_user: "glance"
ceph_glance_keyring: "client.glance.keyring"
ceph_glance_pool_name: "images"
ceph_cinder_user: "cinder"
ceph_cinder_keyring: "client.cinder.keyring"
ceph_cinder_pool_name: "volumes"
ceph_cinder_backup_user: "cinder-backup"
ceph_cinder_backup_keyring: "client.cinder-backup.keyring"
ceph_cinder_backup_pool_name: "backups"
ceph_nova_keyring: "client.nova.keyring"
ceph_nova_user: "nova"
ceph_nova_pool_name: "vms"
glance_backend_ceph: "yes"
cinder_backend_ceph: "yes"
nova_backend_ceph: "yes"
nova_compute_virt_type: "kvm"
neutron_ovn_distributed_fip: "yes"


#Check and verify global yml
grep -v "#" /etc/kolla/globals.yml | tr -s [:space:]

#Deploy OpenStack
### Bootstrap servers with kolla deploy dependencies
kolla-ansible -i multinode bootstrap-servers

### Do pre-deployment checks for hosts
kolla-ansible -i multinode prechecks

### Finally proceed to actual OpenStack deployment
kolla-ansible -i multinode deploy

### Do post-deploy after OpenStack was successfuly deployed
kolla-ansible -i multinode post-deploy

#Install Openstack Client
pip3 install python-openstackclient



